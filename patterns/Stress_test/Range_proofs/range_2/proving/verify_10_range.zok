import "hashes/sha256/512bitPadded.code" as sha256;
from "ecc/babyjubjubParams" import BabyJubJubParams;
import "signatures/verifyEddsa.code" as verifyEddsa;
import "ecc/babyjubjubParams.code" as context;

def main(u32 min, u32 max, u32 [8] attr1, private u32 [8] vc1, private field[2] R1, private field S1, field[2] A1, u32[8] M01, u32[8] M11, u32 [8] attr2, private u32 [8] vc2, private field[2] R2, private field S2, field[2] A2, u32[8] M02, u32[8] M12) -> bool{
    //Verify Signature (R,S) with PupKey (A) on Hash (M0, M1)
	BabyJubJubParams context = context();
    bool isVerified1 = verifyEddsa(R1, S1, A1, M01, M11, context);
    u32[8] hash1 = sha256(attr1, vc1);
    bool hashcheck1 = hash1 == M01;
    // M0 is the first 32 bytes of sha256(input 1 || vc) || sha256(attr || vc)
    bool isVerified2 = verifyEddsa(R2, S2, A2, M02, M12, context);
    u32[8] hash2 = sha256(attr2, vc2);
    bool hashcheck2 = hash2 == M02;

    bool rangeCheck1 = vc1[7] >= min && vc1[7] <= max;
    bool rangeCheck2 = vc2[7] >= min && vc2[7] <= max;

    bool rangeChecks = rangeCheck1 && rangeCheck2  ;
    bool hashchecks = hashcheck1 && hashcheck2  ;
    bool isVerifieds = isVerified1 && isVerified2 ;
    bool r = isVerifieds && hashchecks && rangeChecks;

    return r;
}