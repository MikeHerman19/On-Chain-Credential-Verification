import "hashes/sha256/512bitPadded.code" as sha256;
from "ecc/babyjubjubParams" import BabyJubJubParams;
import "signatures/verifyEddsa.code" as verifyEddsa;
import "ecc/babyjubjubParams.code" as context;

def main(u32 min, u32 max, u32 [8] attr1, private u32 [8] vc1, private field[2] R1, private field S1, field[2] A1, u32[8] M01, u32[8] M11, u32 [8] attr2, private u32 [8] vc2, private field[2] R2, private field S2, field[2] A2, u32[8] M02, u32[8] M12, u32 [8] attr3, private u32 [8] vc3, private field[2] R3, private field S3, field[2] A3, u32[8] M03, u32[8] M13, u32 [8] attr4, private u32 [8] vc4, private field[2] R4, private field S4, field[2] A4, u32[8] M04, u32[8] M14, u32 [8] attr5, private u32 [8] vc5, private field[2] R5, private field S5, field[2] A5, u32[8] M05, u32[8] M15, u32 [8] attr6, private u32 [8] vc6, private field[2] R6, private field S6, field[2] A6, u32[8] M06, u32[8] M16) -> bool{
    //Verify Signature (R,S) with PupKey (A) on Hash (M0, M1)
	BabyJubJubParams context = context();
    bool isVerified1 = verifyEddsa(R1, S1, A1, M01, M11, context);
    u32[8] hash1 = sha256(attr1, vc1);
    bool hashcheck1 = hash1 == M01;
    // M0 is the first 32 bytes of sha256(input 1 || vc) || sha256(attr || vc)
    bool isVerified2 = verifyEddsa(R2, S2, A2, M02, M12, context);
    u32[8] hash2 = sha256(attr2, vc2);
    bool hashcheck2 = hash2 == M02;

    bool isVerified3 = verifyEddsa(R3, S3, A3, M03, M13, context);
    u32[8] hash3 = sha256(attr3, vc3);
    bool hashcheck3 = hash3 == M03;

    bool isVerified4 = verifyEddsa(R4, S4, A4, M04, M14, context);
    u32[8] hash4 = sha256(attr4, vc4);
    bool hashcheck4 = hash4 == M04;

    bool isVerified5 = verifyEddsa(R5, S5, A5, M05, M15, context);
    u32[8] hash5 = sha256(attr5, vc5);
    bool hashcheck5 = hash5 == M05;
    
    bool isVerified6 = verifyEddsa(R6, S6, A6, M06, M16, context);
    u32[8] hash6 = sha256(attr6, vc6);
    bool hashcheck6 = hash6 == M06;




    bool rangeCheck1 = vc1[7] >= min && vc1[7] <= max;
    bool rangeCheck2 = vc2[7] >= min && vc2[7] <= max;
    bool rangeCheck3 = vc3[7] >= min && vc3[7] <= max;
    bool rangeCheck4 = vc4[7] >= min && vc4[7] <= max;
    bool rangeCheck5 = vc5[7] >= min && vc5[7] <= max;
    bool rangeCheck6 = vc6[7] >= min && vc6[7] <= max;


    bool rangeChecks = rangeCheck1 && rangeCheck2 && rangeCheck3 && rangeCheck4 && rangeCheck5 && rangeCheck6 ;
    bool hashchecks = hashcheck1 && hashcheck2 && hashcheck3 && hashcheck4 && hashcheck5 && hashcheck6 ;
    bool isVerifieds = isVerified1 && isVerified2 && isVerified3 && isVerified4 && isVerified5 && isVerified6  ;
    bool r = isVerifieds && hashchecks && rangeChecks;

    return r;
}